// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kafka-egress.proto

package org.apache.flink.egress.generated;

public final class KafkaEgress {
  private KafkaEgress() {}
  public static void registerAllExtensions(
      org.apache.flink.com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      org.apache.flink.com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (org.apache.flink.com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final org.apache.flink.com.google.protobuf.Descriptors.Descriptor
    internal_static_io_statefun_sdk_egress_KafkaProducerRecord_descriptor;
  static final 
    org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_statefun_sdk_egress_KafkaProducerRecord_fieldAccessorTable;

  public static org.apache.flink.com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  org.apache.flink.com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\022kafka-egress.proto\022\026io.statefun.sdk.eg" +
      "ress\"F\n\023KafkaProducerRecord\022\013\n\003key\030\001 \001(\t" +
      "\022\023\n\013value_bytes\030\002 \001(\014\022\r\n\005topic\030\003 \001(\tB>\n." +
      "org.apache.flink.statefun.sdk.egress.gen" +
      "eratedP\001Z\n.;protocolb\006proto3"
    };
    org.apache.flink.com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new org.apache.flink.com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public org.apache.flink.com.google.protobuf.ExtensionRegistry assignDescriptors(
              org.apache.flink.com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    org.apache.flink.com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new org.apache.flink.com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_io_statefun_sdk_egress_KafkaProducerRecord_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_io_statefun_sdk_egress_KafkaProducerRecord_fieldAccessorTable = new
      org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_statefun_sdk_egress_KafkaProducerRecord_descriptor,
        new String[] { "Key", "ValueBytes", "Topic", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
