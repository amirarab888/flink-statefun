// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

package org.apache.flink.common.protobuf.generated;

public final class TestProtos {
  private TestProtos() {}
  public static void registerAllExtensions(
      org.apache.flink.com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      org.apache.flink.com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (org.apache.flink.com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code org.apache.flink.test.Letter}
   */
  public enum Letter
      implements org.apache.flink.com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>A = 0;</code>
     */
    A(0),
    /**
     * <code>B = 1;</code>
     */
    B(1),
    /**
     * <code>C = 2;</code>
     */
    C(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>A = 0;</code>
     */
    public static final int A_VALUE = 0;
    /**
     * <code>B = 1;</code>
     */
    public static final int B_VALUE = 1;
    /**
     * <code>C = 2;</code>
     */
    public static final int C_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static Letter valueOf(int value) {
      return forNumber(value);
    }

    public static Letter forNumber(int value) {
      switch (value) {
        case 0: return A;
        case 1: return B;
        case 2: return C;
        default: return null;
      }
    }

    public static org.apache.flink.com.google.protobuf.Internal.EnumLiteMap<Letter>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final org.apache.flink.com.google.protobuf.Internal.EnumLiteMap<
        Letter> internalValueMap =
          new org.apache.flink.com.google.protobuf.Internal.EnumLiteMap<Letter>() {
            public Letter findValueByNumber(int number) {
              return Letter.forNumber(number);
            }
          };

    public final org.apache.flink.com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final org.apache.flink.com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final org.apache.flink.com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return TestProtos.getDescriptor().getEnumTypes().get(0);
    }

    private static final Letter[] VALUES = values();

    public static Letter valueOf(
        org.apache.flink.com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Letter(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:org.apache.flink.test.Letter)
  }

  public interface SimpleMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.flink.test.SimpleMessage)
      org.apache.flink.com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     */
    String getName();
    /**
     * <code>string name = 1;</code>
     */
    org.apache.flink.com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * Protobuf type {@code org.apache.flink.test.SimpleMessage}
   */
  public  static final class SimpleMessage extends
      org.apache.flink.com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.flink.test.SimpleMessage)
      SimpleMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SimpleMessage.newBuilder() to construct.
    private SimpleMessage(org.apache.flink.com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SimpleMessage() {
      name_ = "";
    }

    @Override
    public final org.apache.flink.com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SimpleMessage(
        org.apache.flink.com.google.protobuf.CodedInputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      org.apache.flink.com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          org.apache.flink.com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (org.apache.flink.com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new org.apache.flink.com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final org.apache.flink.com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TestProtos.internal_static_org_apache_flink_test_SimpleMessage_descriptor;
    }

    @Override
    protected org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TestProtos.internal_static_org_apache_flink_test_SimpleMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SimpleMessage.class, Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile Object name_;
    /**
     * <code>string name = 1;</code>
     */
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        org.apache.flink.com.google.protobuf.ByteString bs = 
            (org.apache.flink.com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     */
    public org.apache.flink.com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        org.apache.flink.com.google.protobuf.ByteString b = 
            org.apache.flink.com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (org.apache.flink.com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(org.apache.flink.com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        org.apache.flink.com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += org.apache.flink.com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SimpleMessage)) {
        return super.equals(obj);
      }
      SimpleMessage other = (SimpleMessage) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SimpleMessage parseFrom(
        java.nio.ByteBuffer data)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SimpleMessage parseFrom(
        java.nio.ByteBuffer data,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SimpleMessage parseFrom(
        org.apache.flink.com.google.protobuf.ByteString data)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SimpleMessage parseFrom(
        org.apache.flink.com.google.protobuf.ByteString data,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SimpleMessage parseFrom(byte[] data)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SimpleMessage parseFrom(
        byte[] data,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SimpleMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SimpleMessage parseFrom(
        java.io.InputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SimpleMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SimpleMessage parseDelimitedFrom(
        java.io.InputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SimpleMessage parseFrom(
        org.apache.flink.com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SimpleMessage parseFrom(
        org.apache.flink.com.google.protobuf.CodedInputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SimpleMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        org.apache.flink.com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.flink.test.SimpleMessage}
     */
    public static final class Builder extends
        org.apache.flink.com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.flink.test.SimpleMessage)
        SimpleMessageOrBuilder {
      public static final org.apache.flink.com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TestProtos.internal_static_org_apache_flink_test_SimpleMessage_descriptor;
      }

      @Override
      protected org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TestProtos.internal_static_org_apache_flink_test_SimpleMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SimpleMessage.class, Builder.class);
      }

      // Construct using org.apache.flink.common.protobuf.generated.TestProtos.SimpleMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          org.apache.flink.com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (org.apache.flink.com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        name_ = "";

        return this;
      }

      @Override
      public org.apache.flink.com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TestProtos.internal_static_org_apache_flink_test_SimpleMessage_descriptor;
      }

      @Override
      public SimpleMessage getDefaultInstanceForType() {
        return SimpleMessage.getDefaultInstance();
      }

      @Override
      public SimpleMessage build() {
        SimpleMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public SimpleMessage buildPartial() {
        SimpleMessage result = new SimpleMessage(this);
        result.name_ = name_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          org.apache.flink.com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(org.apache.flink.com.google.protobuf.Message other) {
        if (other instanceof SimpleMessage) {
          return mergeFrom((SimpleMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SimpleMessage other) {
        if (other == SimpleMessage.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          org.apache.flink.com.google.protobuf.CodedInputStream input,
          org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SimpleMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (org.apache.flink.com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SimpleMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object name_ = "";
      /**
       * <code>string name = 1;</code>
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          org.apache.flink.com.google.protobuf.ByteString bs =
              (org.apache.flink.com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public org.apache.flink.com.google.protobuf.ByteString
          getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          org.apache.flink.com.google.protobuf.ByteString b = 
              org.apache.flink.com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (org.apache.flink.com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          org.apache.flink.com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final org.apache.flink.com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final org.apache.flink.com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.flink.test.SimpleMessage)
    }

    // @@protoc_insertion_point(class_scope:org.apache.flink.test.SimpleMessage)
    private static final SimpleMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SimpleMessage();
    }

    public static SimpleMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final org.apache.flink.com.google.protobuf.Parser<SimpleMessage>
        PARSER = new org.apache.flink.com.google.protobuf.AbstractParser<SimpleMessage>() {
      @Override
      public SimpleMessage parsePartialFrom(
          org.apache.flink.com.google.protobuf.CodedInputStream input,
          org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
        return new SimpleMessage(input, extensionRegistry);
      }
    };

    public static org.apache.flink.com.google.protobuf.Parser<SimpleMessage> parser() {
      return PARSER;
    }

    @Override
    public org.apache.flink.com.google.protobuf.Parser<SimpleMessage> getParserForType() {
      return PARSER;
    }

    @Override
    public SimpleMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RepeatedMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.flink.test.RepeatedMessage)
      org.apache.flink.com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
     */
    java.util.List<SimpleMessage> 
        getSimpleMessageList();
    /**
     * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
     */
    SimpleMessage getSimpleMessage(int index);
    /**
     * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
     */
    int getSimpleMessageCount();
    /**
     * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
     */
    java.util.List<? extends SimpleMessageOrBuilder> 
        getSimpleMessageOrBuilderList();
    /**
     * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
     */
    SimpleMessageOrBuilder getSimpleMessageOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.apache.flink.test.RepeatedMessage}
   */
  public  static final class RepeatedMessage extends
      org.apache.flink.com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.flink.test.RepeatedMessage)
      RepeatedMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RepeatedMessage.newBuilder() to construct.
    private RepeatedMessage(org.apache.flink.com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RepeatedMessage() {
      simpleMessage_ = java.util.Collections.emptyList();
    }

    @Override
    public final org.apache.flink.com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RepeatedMessage(
        org.apache.flink.com.google.protobuf.CodedInputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      org.apache.flink.com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          org.apache.flink.com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                simpleMessage_ = new java.util.ArrayList<SimpleMessage>();
                mutable_bitField0_ |= 0x00000001;
              }
              simpleMessage_.add(
                  input.readMessage(SimpleMessage.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (org.apache.flink.com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new org.apache.flink.com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          simpleMessage_ = java.util.Collections.unmodifiableList(simpleMessage_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final org.apache.flink.com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TestProtos.internal_static_org_apache_flink_test_RepeatedMessage_descriptor;
    }

    @Override
    protected org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TestProtos.internal_static_org_apache_flink_test_RepeatedMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RepeatedMessage.class, Builder.class);
    }

    public static final int SIMPLE_MESSAGE_FIELD_NUMBER = 2;
    private java.util.List<SimpleMessage> simpleMessage_;
    /**
     * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
     */
    public java.util.List<SimpleMessage> getSimpleMessageList() {
      return simpleMessage_;
    }
    /**
     * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
     */
    public java.util.List<? extends SimpleMessageOrBuilder> 
        getSimpleMessageOrBuilderList() {
      return simpleMessage_;
    }
    /**
     * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
     */
    public int getSimpleMessageCount() {
      return simpleMessage_.size();
    }
    /**
     * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
     */
    public SimpleMessage getSimpleMessage(int index) {
      return simpleMessage_.get(index);
    }
    /**
     * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
     */
    public SimpleMessageOrBuilder getSimpleMessageOrBuilder(
        int index) {
      return simpleMessage_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(org.apache.flink.com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < simpleMessage_.size(); i++) {
        output.writeMessage(2, simpleMessage_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < simpleMessage_.size(); i++) {
        size += org.apache.flink.com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, simpleMessage_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RepeatedMessage)) {
        return super.equals(obj);
      }
      RepeatedMessage other = (RepeatedMessage) obj;

      if (!getSimpleMessageList()
          .equals(other.getSimpleMessageList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSimpleMessageCount() > 0) {
        hash = (37 * hash) + SIMPLE_MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getSimpleMessageList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RepeatedMessage parseFrom(
        java.nio.ByteBuffer data)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RepeatedMessage parseFrom(
        java.nio.ByteBuffer data,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RepeatedMessage parseFrom(
        org.apache.flink.com.google.protobuf.ByteString data)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RepeatedMessage parseFrom(
        org.apache.flink.com.google.protobuf.ByteString data,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RepeatedMessage parseFrom(byte[] data)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RepeatedMessage parseFrom(
        byte[] data,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RepeatedMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RepeatedMessage parseFrom(
        java.io.InputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RepeatedMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RepeatedMessage parseDelimitedFrom(
        java.io.InputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RepeatedMessage parseFrom(
        org.apache.flink.com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RepeatedMessage parseFrom(
        org.apache.flink.com.google.protobuf.CodedInputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RepeatedMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        org.apache.flink.com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.flink.test.RepeatedMessage}
     */
    public static final class Builder extends
        org.apache.flink.com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.flink.test.RepeatedMessage)
        RepeatedMessageOrBuilder {
      public static final org.apache.flink.com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TestProtos.internal_static_org_apache_flink_test_RepeatedMessage_descriptor;
      }

      @Override
      protected org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TestProtos.internal_static_org_apache_flink_test_RepeatedMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RepeatedMessage.class, Builder.class);
      }

      // Construct using org.apache.flink.common.protobuf.generated.TestProtos.RepeatedMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          org.apache.flink.com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (org.apache.flink.com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSimpleMessageFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (simpleMessageBuilder_ == null) {
          simpleMessage_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          simpleMessageBuilder_.clear();
        }
        return this;
      }

      @Override
      public org.apache.flink.com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TestProtos.internal_static_org_apache_flink_test_RepeatedMessage_descriptor;
      }

      @Override
      public RepeatedMessage getDefaultInstanceForType() {
        return RepeatedMessage.getDefaultInstance();
      }

      @Override
      public RepeatedMessage build() {
        RepeatedMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public RepeatedMessage buildPartial() {
        RepeatedMessage result = new RepeatedMessage(this);
        int from_bitField0_ = bitField0_;
        if (simpleMessageBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            simpleMessage_ = java.util.Collections.unmodifiableList(simpleMessage_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.simpleMessage_ = simpleMessage_;
        } else {
          result.simpleMessage_ = simpleMessageBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          org.apache.flink.com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(org.apache.flink.com.google.protobuf.Message other) {
        if (other instanceof RepeatedMessage) {
          return mergeFrom((RepeatedMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RepeatedMessage other) {
        if (other == RepeatedMessage.getDefaultInstance()) return this;
        if (simpleMessageBuilder_ == null) {
          if (!other.simpleMessage_.isEmpty()) {
            if (simpleMessage_.isEmpty()) {
              simpleMessage_ = other.simpleMessage_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSimpleMessageIsMutable();
              simpleMessage_.addAll(other.simpleMessage_);
            }
            onChanged();
          }
        } else {
          if (!other.simpleMessage_.isEmpty()) {
            if (simpleMessageBuilder_.isEmpty()) {
              simpleMessageBuilder_.dispose();
              simpleMessageBuilder_ = null;
              simpleMessage_ = other.simpleMessage_;
              bitField0_ = (bitField0_ & ~0x00000001);
              simpleMessageBuilder_ = 
                org.apache.flink.com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSimpleMessageFieldBuilder() : null;
            } else {
              simpleMessageBuilder_.addAllMessages(other.simpleMessage_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          org.apache.flink.com.google.protobuf.CodedInputStream input,
          org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RepeatedMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (org.apache.flink.com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RepeatedMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<SimpleMessage> simpleMessage_ =
        java.util.Collections.emptyList();
      private void ensureSimpleMessageIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          simpleMessage_ = new java.util.ArrayList<SimpleMessage>(simpleMessage_);
          bitField0_ |= 0x00000001;
         }
      }

      private org.apache.flink.com.google.protobuf.RepeatedFieldBuilderV3<
          SimpleMessage, SimpleMessage.Builder, SimpleMessageOrBuilder> simpleMessageBuilder_;

      /**
       * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
       */
      public java.util.List<SimpleMessage> getSimpleMessageList() {
        if (simpleMessageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(simpleMessage_);
        } else {
          return simpleMessageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
       */
      public int getSimpleMessageCount() {
        if (simpleMessageBuilder_ == null) {
          return simpleMessage_.size();
        } else {
          return simpleMessageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
       */
      public SimpleMessage getSimpleMessage(int index) {
        if (simpleMessageBuilder_ == null) {
          return simpleMessage_.get(index);
        } else {
          return simpleMessageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
       */
      public Builder setSimpleMessage(
          int index, SimpleMessage value) {
        if (simpleMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSimpleMessageIsMutable();
          simpleMessage_.set(index, value);
          onChanged();
        } else {
          simpleMessageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
       */
      public Builder setSimpleMessage(
          int index, SimpleMessage.Builder builderForValue) {
        if (simpleMessageBuilder_ == null) {
          ensureSimpleMessageIsMutable();
          simpleMessage_.set(index, builderForValue.build());
          onChanged();
        } else {
          simpleMessageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
       */
      public Builder addSimpleMessage(SimpleMessage value) {
        if (simpleMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSimpleMessageIsMutable();
          simpleMessage_.add(value);
          onChanged();
        } else {
          simpleMessageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
       */
      public Builder addSimpleMessage(
          int index, SimpleMessage value) {
        if (simpleMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSimpleMessageIsMutable();
          simpleMessage_.add(index, value);
          onChanged();
        } else {
          simpleMessageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
       */
      public Builder addSimpleMessage(
          SimpleMessage.Builder builderForValue) {
        if (simpleMessageBuilder_ == null) {
          ensureSimpleMessageIsMutable();
          simpleMessage_.add(builderForValue.build());
          onChanged();
        } else {
          simpleMessageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
       */
      public Builder addSimpleMessage(
          int index, SimpleMessage.Builder builderForValue) {
        if (simpleMessageBuilder_ == null) {
          ensureSimpleMessageIsMutable();
          simpleMessage_.add(index, builderForValue.build());
          onChanged();
        } else {
          simpleMessageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
       */
      public Builder addAllSimpleMessage(
          Iterable<? extends SimpleMessage> values) {
        if (simpleMessageBuilder_ == null) {
          ensureSimpleMessageIsMutable();
          org.apache.flink.com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, simpleMessage_);
          onChanged();
        } else {
          simpleMessageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
       */
      public Builder clearSimpleMessage() {
        if (simpleMessageBuilder_ == null) {
          simpleMessage_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          simpleMessageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
       */
      public Builder removeSimpleMessage(int index) {
        if (simpleMessageBuilder_ == null) {
          ensureSimpleMessageIsMutable();
          simpleMessage_.remove(index);
          onChanged();
        } else {
          simpleMessageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
       */
      public SimpleMessage.Builder getSimpleMessageBuilder(
          int index) {
        return getSimpleMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
       */
      public SimpleMessageOrBuilder getSimpleMessageOrBuilder(
          int index) {
        if (simpleMessageBuilder_ == null) {
          return simpleMessage_.get(index);  } else {
          return simpleMessageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
       */
      public java.util.List<? extends SimpleMessageOrBuilder> 
           getSimpleMessageOrBuilderList() {
        if (simpleMessageBuilder_ != null) {
          return simpleMessageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(simpleMessage_);
        }
      }
      /**
       * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
       */
      public SimpleMessage.Builder addSimpleMessageBuilder() {
        return getSimpleMessageFieldBuilder().addBuilder(
            SimpleMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
       */
      public SimpleMessage.Builder addSimpleMessageBuilder(
          int index) {
        return getSimpleMessageFieldBuilder().addBuilder(
            index, SimpleMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.flink.test.SimpleMessage simple_message = 2;</code>
       */
      public java.util.List<SimpleMessage.Builder> 
           getSimpleMessageBuilderList() {
        return getSimpleMessageFieldBuilder().getBuilderList();
      }
      private org.apache.flink.com.google.protobuf.RepeatedFieldBuilderV3<
          SimpleMessage, SimpleMessage.Builder, SimpleMessageOrBuilder> 
          getSimpleMessageFieldBuilder() {
        if (simpleMessageBuilder_ == null) {
          simpleMessageBuilder_ = new org.apache.flink.com.google.protobuf.RepeatedFieldBuilderV3<
              SimpleMessage, SimpleMessage.Builder, SimpleMessageOrBuilder>(
                  simpleMessage_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          simpleMessage_ = null;
        }
        return simpleMessageBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final org.apache.flink.com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final org.apache.flink.com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.flink.test.RepeatedMessage)
    }

    // @@protoc_insertion_point(class_scope:org.apache.flink.test.RepeatedMessage)
    private static final RepeatedMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RepeatedMessage();
    }

    public static RepeatedMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final org.apache.flink.com.google.protobuf.Parser<RepeatedMessage>
        PARSER = new org.apache.flink.com.google.protobuf.AbstractParser<RepeatedMessage>() {
      @Override
      public RepeatedMessage parsePartialFrom(
          org.apache.flink.com.google.protobuf.CodedInputStream input,
          org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
        return new RepeatedMessage(input, extensionRegistry);
      }
    };

    public static org.apache.flink.com.google.protobuf.Parser<RepeatedMessage> parser() {
      return PARSER;
    }

    @Override
    public org.apache.flink.com.google.protobuf.Parser<RepeatedMessage> getParserForType() {
      return PARSER;
    }

    @Override
    public RepeatedMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NestedMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.flink.test.NestedMessage)
      org.apache.flink.com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.flink.test.NestedMessage.Foo foo = 1;</code>
     */
    boolean hasFoo();
    /**
     * <code>.org.apache.flink.test.NestedMessage.Foo foo = 1;</code>
     */
    NestedMessage.Foo getFoo();
    /**
     * <code>.org.apache.flink.test.NestedMessage.Foo foo = 1;</code>
     */
    NestedMessage.FooOrBuilder getFooOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.flink.test.NestedMessage}
   */
  public  static final class NestedMessage extends
      org.apache.flink.com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.flink.test.NestedMessage)
      NestedMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NestedMessage.newBuilder() to construct.
    private NestedMessage(org.apache.flink.com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NestedMessage() {
    }

    @Override
    public final org.apache.flink.com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NestedMessage(
        org.apache.flink.com.google.protobuf.CodedInputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      org.apache.flink.com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          org.apache.flink.com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              Foo.Builder subBuilder = null;
              if (foo_ != null) {
                subBuilder = foo_.toBuilder();
              }
              foo_ = input.readMessage(Foo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(foo_);
                foo_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (org.apache.flink.com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new org.apache.flink.com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final org.apache.flink.com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TestProtos.internal_static_org_apache_flink_test_NestedMessage_descriptor;
    }

    @Override
    protected org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TestProtos.internal_static_org_apache_flink_test_NestedMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              NestedMessage.class, Builder.class);
    }

    public interface FooOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.apache.flink.test.NestedMessage.Foo)
        org.apache.flink.com.google.protobuf.MessageOrBuilder {

      /**
       * <code>string name = 1;</code>
       */
      String getName();
      /**
       * <code>string name = 1;</code>
       */
      org.apache.flink.com.google.protobuf.ByteString
          getNameBytes();
    }
    /**
     * Protobuf type {@code org.apache.flink.test.NestedMessage.Foo}
     */
    public  static final class Foo extends
        org.apache.flink.com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.apache.flink.test.NestedMessage.Foo)
        FooOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Foo.newBuilder() to construct.
      private Foo(org.apache.flink.com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Foo() {
        name_ = "";
      }

      @Override
      public final org.apache.flink.com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Foo(
          org.apache.flink.com.google.protobuf.CodedInputStream input,
          org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        int mutable_bitField0_ = 0;
        org.apache.flink.com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            org.apache.flink.com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                String s = input.readStringRequireUtf8();

                name_ = s;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (org.apache.flink.com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new org.apache.flink.com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final org.apache.flink.com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TestProtos.internal_static_org_apache_flink_test_NestedMessage_Foo_descriptor;
      }

      @Override
      protected org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TestProtos.internal_static_org_apache_flink_test_NestedMessage_Foo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Foo.class, Builder.class);
      }

      public static final int NAME_FIELD_NUMBER = 1;
      private volatile Object name_;
      /**
       * <code>string name = 1;</code>
       */
      public String getName() {
        Object ref = name_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          org.apache.flink.com.google.protobuf.ByteString bs = 
              (org.apache.flink.com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          name_ = s;
          return s;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public org.apache.flink.com.google.protobuf.ByteString
          getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          org.apache.flink.com.google.protobuf.ByteString b = 
              org.apache.flink.com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (org.apache.flink.com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @Override
      public void writeTo(org.apache.flink.com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getNameBytes().isEmpty()) {
          org.apache.flink.com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getNameBytes().isEmpty()) {
          size += org.apache.flink.com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @Override
      public boolean equals(final Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof Foo)) {
          return super.equals(obj);
        }
        Foo other = (Foo) obj;

        if (!getName()
            .equals(other.getName())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static Foo parseFrom(
          java.nio.ByteBuffer data)
          throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Foo parseFrom(
          java.nio.ByteBuffer data,
          org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Foo parseFrom(
          org.apache.flink.com.google.protobuf.ByteString data)
          throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Foo parseFrom(
          org.apache.flink.com.google.protobuf.ByteString data,
          org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Foo parseFrom(byte[] data)
          throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Foo parseFrom(
          byte[] data,
          org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Foo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return org.apache.flink.com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static Foo parseFrom(
          java.io.InputStream input,
          org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return org.apache.flink.com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static Foo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return org.apache.flink.com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static Foo parseDelimitedFrom(
          java.io.InputStream input,
          org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return org.apache.flink.com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static Foo parseFrom(
          org.apache.flink.com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return org.apache.flink.com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static Foo parseFrom(
          org.apache.flink.com.google.protobuf.CodedInputStream input,
          org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return org.apache.flink.com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(Foo prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @Override
      protected Builder newBuilderForType(
          org.apache.flink.com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org.apache.flink.test.NestedMessage.Foo}
       */
      public static final class Builder extends
          org.apache.flink.com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.apache.flink.test.NestedMessage.Foo)
          FooOrBuilder {
        public static final org.apache.flink.com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return TestProtos.internal_static_org_apache_flink_test_NestedMessage_Foo_descriptor;
        }

        @Override
        protected org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return TestProtos.internal_static_org_apache_flink_test_NestedMessage_Foo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  Foo.class, Builder.class);
        }

        // Construct using org.apache.flink.common.protobuf.generated.TestProtos.NestedMessage.Foo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            org.apache.flink.com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (org.apache.flink.com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @Override
        public Builder clear() {
          super.clear();
          name_ = "";

          return this;
        }

        @Override
        public org.apache.flink.com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return TestProtos.internal_static_org_apache_flink_test_NestedMessage_Foo_descriptor;
        }

        @Override
        public Foo getDefaultInstanceForType() {
          return Foo.getDefaultInstance();
        }

        @Override
        public Foo build() {
          Foo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @Override
        public Foo buildPartial() {
          Foo result = new Foo(this);
          result.name_ = name_;
          onBuilt();
          return result;
        }

        @Override
        public Builder clone() {
          return super.clone();
        }
        @Override
        public Builder setField(
            org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return super.setField(field, value);
        }
        @Override
        public Builder clearField(
            org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @Override
        public Builder clearOneof(
            org.apache.flink.com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @Override
        public Builder setRepeatedField(
            org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @Override
        public Builder addRepeatedField(
            org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return super.addRepeatedField(field, value);
        }
        @Override
        public Builder mergeFrom(org.apache.flink.com.google.protobuf.Message other) {
          if (other instanceof Foo) {
            return mergeFrom((Foo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(Foo other) {
          if (other == Foo.getDefaultInstance()) return this;
          if (!other.getName().isEmpty()) {
            name_ = other.name_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @Override
        public final boolean isInitialized() {
          return true;
        }

        @Override
        public Builder mergeFrom(
            org.apache.flink.com.google.protobuf.CodedInputStream input,
            org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Foo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (org.apache.flink.com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (Foo) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private Object name_ = "";
        /**
         * <code>string name = 1;</code>
         */
        public String getName() {
          Object ref = name_;
          if (!(ref instanceof String)) {
            org.apache.flink.com.google.protobuf.ByteString bs =
                (org.apache.flink.com.google.protobuf.ByteString) ref;
            String s = bs.toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        /**
         * <code>string name = 1;</code>
         */
        public org.apache.flink.com.google.protobuf.ByteString
            getNameBytes() {
          Object ref = name_;
          if (ref instanceof String) {
            org.apache.flink.com.google.protobuf.ByteString b = 
                org.apache.flink.com.google.protobuf.ByteString.copyFromUtf8(
                    (String) ref);
            name_ = b;
            return b;
          } else {
            return (org.apache.flink.com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string name = 1;</code>
         */
        public Builder setName(
            String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string name = 1;</code>
         */
        public Builder clearName() {
          
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>string name = 1;</code>
         */
        public Builder setNameBytes(
            org.apache.flink.com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          name_ = value;
          onChanged();
          return this;
        }
        @Override
        public final Builder setUnknownFields(
            final org.apache.flink.com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @Override
        public final Builder mergeUnknownFields(
            final org.apache.flink.com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.apache.flink.test.NestedMessage.Foo)
      }

      // @@protoc_insertion_point(class_scope:org.apache.flink.test.NestedMessage.Foo)
      private static final Foo DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new Foo();
      }

      public static Foo getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final org.apache.flink.com.google.protobuf.Parser<Foo>
          PARSER = new org.apache.flink.com.google.protobuf.AbstractParser<Foo>() {
        @Override
        public Foo parsePartialFrom(
            org.apache.flink.com.google.protobuf.CodedInputStream input,
            org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
          return new Foo(input, extensionRegistry);
        }
      };

      public static org.apache.flink.com.google.protobuf.Parser<Foo> parser() {
        return PARSER;
      }

      @Override
      public org.apache.flink.com.google.protobuf.Parser<Foo> getParserForType() {
        return PARSER;
      }

      @Override
      public Foo getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int FOO_FIELD_NUMBER = 1;
    private Foo foo_;
    /**
     * <code>.org.apache.flink.test.NestedMessage.Foo foo = 1;</code>
     */
    public boolean hasFoo() {
      return foo_ != null;
    }
    /**
     * <code>.org.apache.flink.test.NestedMessage.Foo foo = 1;</code>
     */
    public Foo getFoo() {
      return foo_ == null ? Foo.getDefaultInstance() : foo_;
    }
    /**
     * <code>.org.apache.flink.test.NestedMessage.Foo foo = 1;</code>
     */
    public FooOrBuilder getFooOrBuilder() {
      return getFoo();
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(org.apache.flink.com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (foo_ != null) {
        output.writeMessage(1, getFoo());
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (foo_ != null) {
        size += org.apache.flink.com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFoo());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof NestedMessage)) {
        return super.equals(obj);
      }
      NestedMessage other = (NestedMessage) obj;

      if (hasFoo() != other.hasFoo()) return false;
      if (hasFoo()) {
        if (!getFoo()
            .equals(other.getFoo())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFoo()) {
        hash = (37 * hash) + FOO_FIELD_NUMBER;
        hash = (53 * hash) + getFoo().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static NestedMessage parseFrom(
        java.nio.ByteBuffer data)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NestedMessage parseFrom(
        java.nio.ByteBuffer data,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NestedMessage parseFrom(
        org.apache.flink.com.google.protobuf.ByteString data)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NestedMessage parseFrom(
        org.apache.flink.com.google.protobuf.ByteString data,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NestedMessage parseFrom(byte[] data)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NestedMessage parseFrom(
        byte[] data,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NestedMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NestedMessage parseFrom(
        java.io.InputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static NestedMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static NestedMessage parseDelimitedFrom(
        java.io.InputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static NestedMessage parseFrom(
        org.apache.flink.com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NestedMessage parseFrom(
        org.apache.flink.com.google.protobuf.CodedInputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(NestedMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        org.apache.flink.com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.flink.test.NestedMessage}
     */
    public static final class Builder extends
        org.apache.flink.com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.flink.test.NestedMessage)
        NestedMessageOrBuilder {
      public static final org.apache.flink.com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TestProtos.internal_static_org_apache_flink_test_NestedMessage_descriptor;
      }

      @Override
      protected org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TestProtos.internal_static_org_apache_flink_test_NestedMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                NestedMessage.class, Builder.class);
      }

      // Construct using org.apache.flink.common.protobuf.generated.TestProtos.NestedMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          org.apache.flink.com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (org.apache.flink.com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (fooBuilder_ == null) {
          foo_ = null;
        } else {
          foo_ = null;
          fooBuilder_ = null;
        }
        return this;
      }

      @Override
      public org.apache.flink.com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TestProtos.internal_static_org_apache_flink_test_NestedMessage_descriptor;
      }

      @Override
      public NestedMessage getDefaultInstanceForType() {
        return NestedMessage.getDefaultInstance();
      }

      @Override
      public NestedMessage build() {
        NestedMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public NestedMessage buildPartial() {
        NestedMessage result = new NestedMessage(this);
        if (fooBuilder_ == null) {
          result.foo_ = foo_;
        } else {
          result.foo_ = fooBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          org.apache.flink.com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(org.apache.flink.com.google.protobuf.Message other) {
        if (other instanceof NestedMessage) {
          return mergeFrom((NestedMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(NestedMessage other) {
        if (other == NestedMessage.getDefaultInstance()) return this;
        if (other.hasFoo()) {
          mergeFoo(other.getFoo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          org.apache.flink.com.google.protobuf.CodedInputStream input,
          org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        NestedMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (org.apache.flink.com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (NestedMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Foo foo_;
      private org.apache.flink.com.google.protobuf.SingleFieldBuilderV3<
          Foo, Foo.Builder, FooOrBuilder> fooBuilder_;
      /**
       * <code>.org.apache.flink.test.NestedMessage.Foo foo = 1;</code>
       */
      public boolean hasFoo() {
        return fooBuilder_ != null || foo_ != null;
      }
      /**
       * <code>.org.apache.flink.test.NestedMessage.Foo foo = 1;</code>
       */
      public Foo getFoo() {
        if (fooBuilder_ == null) {
          return foo_ == null ? Foo.getDefaultInstance() : foo_;
        } else {
          return fooBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.flink.test.NestedMessage.Foo foo = 1;</code>
       */
      public Builder setFoo(Foo value) {
        if (fooBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          foo_ = value;
          onChanged();
        } else {
          fooBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.flink.test.NestedMessage.Foo foo = 1;</code>
       */
      public Builder setFoo(
          Foo.Builder builderForValue) {
        if (fooBuilder_ == null) {
          foo_ = builderForValue.build();
          onChanged();
        } else {
          fooBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.apache.flink.test.NestedMessage.Foo foo = 1;</code>
       */
      public Builder mergeFoo(Foo value) {
        if (fooBuilder_ == null) {
          if (foo_ != null) {
            foo_ =
              Foo.newBuilder(foo_).mergeFrom(value).buildPartial();
          } else {
            foo_ = value;
          }
          onChanged();
        } else {
          fooBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.flink.test.NestedMessage.Foo foo = 1;</code>
       */
      public Builder clearFoo() {
        if (fooBuilder_ == null) {
          foo_ = null;
          onChanged();
        } else {
          foo_ = null;
          fooBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.apache.flink.test.NestedMessage.Foo foo = 1;</code>
       */
      public Foo.Builder getFooBuilder() {
        
        onChanged();
        return getFooFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.flink.test.NestedMessage.Foo foo = 1;</code>
       */
      public FooOrBuilder getFooOrBuilder() {
        if (fooBuilder_ != null) {
          return fooBuilder_.getMessageOrBuilder();
        } else {
          return foo_ == null ?
              Foo.getDefaultInstance() : foo_;
        }
      }
      /**
       * <code>.org.apache.flink.test.NestedMessage.Foo foo = 1;</code>
       */
      private org.apache.flink.com.google.protobuf.SingleFieldBuilderV3<
          Foo, Foo.Builder, FooOrBuilder> 
          getFooFieldBuilder() {
        if (fooBuilder_ == null) {
          fooBuilder_ = new org.apache.flink.com.google.protobuf.SingleFieldBuilderV3<
              Foo, Foo.Builder, FooOrBuilder>(
                  getFoo(),
                  getParentForChildren(),
                  isClean());
          foo_ = null;
        }
        return fooBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final org.apache.flink.com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final org.apache.flink.com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.flink.test.NestedMessage)
    }

    // @@protoc_insertion_point(class_scope:org.apache.flink.test.NestedMessage)
    private static final NestedMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new NestedMessage();
    }

    public static NestedMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final org.apache.flink.com.google.protobuf.Parser<NestedMessage>
        PARSER = new org.apache.flink.com.google.protobuf.AbstractParser<NestedMessage>() {
      @Override
      public NestedMessage parsePartialFrom(
          org.apache.flink.com.google.protobuf.CodedInputStream input,
          org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
        return new NestedMessage(input, extensionRegistry);
      }
    };

    public static org.apache.flink.com.google.protobuf.Parser<NestedMessage> parser() {
      return PARSER;
    }

    @Override
    public org.apache.flink.com.google.protobuf.Parser<NestedMessage> getParserForType() {
      return PARSER;
    }

    @Override
    public NestedMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MessageWithEnumOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.flink.test.MessageWithEnum)
      org.apache.flink.com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.flink.test.Letter letter = 1;</code>
     */
    int getLetterValue();
    /**
     * <code>.org.apache.flink.test.Letter letter = 1;</code>
     */
    Letter getLetter();
  }
  /**
   * Protobuf type {@code org.apache.flink.test.MessageWithEnum}
   */
  public  static final class MessageWithEnum extends
      org.apache.flink.com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.flink.test.MessageWithEnum)
      MessageWithEnumOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MessageWithEnum.newBuilder() to construct.
    private MessageWithEnum(org.apache.flink.com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MessageWithEnum() {
      letter_ = 0;
    }

    @Override
    public final org.apache.flink.com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MessageWithEnum(
        org.apache.flink.com.google.protobuf.CodedInputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      org.apache.flink.com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          org.apache.flink.com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              letter_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (org.apache.flink.com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new org.apache.flink.com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final org.apache.flink.com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TestProtos.internal_static_org_apache_flink_test_MessageWithEnum_descriptor;
    }

    @Override
    protected org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TestProtos.internal_static_org_apache_flink_test_MessageWithEnum_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MessageWithEnum.class, Builder.class);
    }

    public static final int LETTER_FIELD_NUMBER = 1;
    private int letter_;
    /**
     * <code>.org.apache.flink.test.Letter letter = 1;</code>
     */
    public int getLetterValue() {
      return letter_;
    }
    /**
     * <code>.org.apache.flink.test.Letter letter = 1;</code>
     */
    public Letter getLetter() {
      @SuppressWarnings("deprecation")
      Letter result = Letter.valueOf(letter_);
      return result == null ? Letter.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(org.apache.flink.com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (letter_ != Letter.A.getNumber()) {
        output.writeEnum(1, letter_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (letter_ != Letter.A.getNumber()) {
        size += org.apache.flink.com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, letter_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MessageWithEnum)) {
        return super.equals(obj);
      }
      MessageWithEnum other = (MessageWithEnum) obj;

      if (letter_ != other.letter_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LETTER_FIELD_NUMBER;
      hash = (53 * hash) + letter_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MessageWithEnum parseFrom(
        java.nio.ByteBuffer data)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MessageWithEnum parseFrom(
        java.nio.ByteBuffer data,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MessageWithEnum parseFrom(
        org.apache.flink.com.google.protobuf.ByteString data)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MessageWithEnum parseFrom(
        org.apache.flink.com.google.protobuf.ByteString data,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MessageWithEnum parseFrom(byte[] data)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MessageWithEnum parseFrom(
        byte[] data,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MessageWithEnum parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MessageWithEnum parseFrom(
        java.io.InputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MessageWithEnum parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MessageWithEnum parseDelimitedFrom(
        java.io.InputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MessageWithEnum parseFrom(
        org.apache.flink.com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MessageWithEnum parseFrom(
        org.apache.flink.com.google.protobuf.CodedInputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MessageWithEnum prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        org.apache.flink.com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.flink.test.MessageWithEnum}
     */
    public static final class Builder extends
        org.apache.flink.com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.flink.test.MessageWithEnum)
        MessageWithEnumOrBuilder {
      public static final org.apache.flink.com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TestProtos.internal_static_org_apache_flink_test_MessageWithEnum_descriptor;
      }

      @Override
      protected org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TestProtos.internal_static_org_apache_flink_test_MessageWithEnum_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MessageWithEnum.class, Builder.class);
      }

      // Construct using org.apache.flink.common.protobuf.generated.TestProtos.MessageWithEnum.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          org.apache.flink.com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (org.apache.flink.com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        letter_ = 0;

        return this;
      }

      @Override
      public org.apache.flink.com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TestProtos.internal_static_org_apache_flink_test_MessageWithEnum_descriptor;
      }

      @Override
      public MessageWithEnum getDefaultInstanceForType() {
        return MessageWithEnum.getDefaultInstance();
      }

      @Override
      public MessageWithEnum build() {
        MessageWithEnum result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public MessageWithEnum buildPartial() {
        MessageWithEnum result = new MessageWithEnum(this);
        result.letter_ = letter_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          org.apache.flink.com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(org.apache.flink.com.google.protobuf.Message other) {
        if (other instanceof MessageWithEnum) {
          return mergeFrom((MessageWithEnum)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MessageWithEnum other) {
        if (other == MessageWithEnum.getDefaultInstance()) return this;
        if (other.letter_ != 0) {
          setLetterValue(other.getLetterValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          org.apache.flink.com.google.protobuf.CodedInputStream input,
          org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.flink.common.protobuf.generated.TestProtos.MessageWithEnum parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (org.apache.flink.com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.flink.common.protobuf.generated.TestProtos.MessageWithEnum) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int letter_ = 0;
      /**
       * <code>.org.apache.flink.test.Letter letter = 1;</code>
       */
      public int getLetterValue() {
        return letter_;
      }
      /**
       * <code>.org.apache.flink.test.Letter letter = 1;</code>
       */
      public Builder setLetterValue(int value) {
        letter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.flink.test.Letter letter = 1;</code>
       */
      public org.apache.flink.common.protobuf.generated.TestProtos.Letter getLetter() {
        @SuppressWarnings("deprecation")
        org.apache.flink.common.protobuf.generated.TestProtos.Letter result = org.apache.flink.common.protobuf.generated.TestProtos.Letter.valueOf(letter_);
        return result == null ? org.apache.flink.common.protobuf.generated.TestProtos.Letter.UNRECOGNIZED : result;
      }
      /**
       * <code>.org.apache.flink.test.Letter letter = 1;</code>
       */
      public Builder setLetter(org.apache.flink.common.protobuf.generated.TestProtos.Letter value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        letter_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.flink.test.Letter letter = 1;</code>
       */
      public Builder clearLetter() {
        
        letter_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final org.apache.flink.com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final org.apache.flink.com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.flink.test.MessageWithEnum)
    }

    // @@protoc_insertion_point(class_scope:org.apache.flink.test.MessageWithEnum)
    private static final org.apache.flink.common.protobuf.generated.TestProtos.MessageWithEnum DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.flink.common.protobuf.generated.TestProtos.MessageWithEnum();
    }

    public static org.apache.flink.common.protobuf.generated.TestProtos.MessageWithEnum getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final org.apache.flink.com.google.protobuf.Parser<MessageWithEnum>
        PARSER = new org.apache.flink.com.google.protobuf.AbstractParser<MessageWithEnum>() {
      @Override
      public MessageWithEnum parsePartialFrom(
          org.apache.flink.com.google.protobuf.CodedInputStream input,
          org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
        return new MessageWithEnum(input, extensionRegistry);
      }
    };

    public static org.apache.flink.com.google.protobuf.Parser<MessageWithEnum> parser() {
      return PARSER;
    }

    @Override
    public org.apache.flink.com.google.protobuf.Parser<MessageWithEnum> getParserForType() {
      return PARSER;
    }

    @Override
    public org.apache.flink.common.protobuf.generated.TestProtos.MessageWithEnum getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ImportedMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.flink.test.ImportedMessage)
      org.apache.flink.com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.google.protobuf.Any imported = 2;</code>
     */
    boolean hasImported();
    /**
     * <code>.google.protobuf.Any imported = 2;</code>
     */
    org.apache.flink.com.google.protobuf.Any getImported();
    /**
     * <code>.google.protobuf.Any imported = 2;</code>
     */
    org.apache.flink.com.google.protobuf.AnyOrBuilder getImportedOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.flink.test.ImportedMessage}
   */
  public  static final class ImportedMessage extends
      org.apache.flink.com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.flink.test.ImportedMessage)
      ImportedMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ImportedMessage.newBuilder() to construct.
    private ImportedMessage(org.apache.flink.com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ImportedMessage() {
    }

    @Override
    public final org.apache.flink.com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ImportedMessage(
        org.apache.flink.com.google.protobuf.CodedInputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      org.apache.flink.com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          org.apache.flink.com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {
              org.apache.flink.com.google.protobuf.Any.Builder subBuilder = null;
              if (imported_ != null) {
                subBuilder = imported_.toBuilder();
              }
              imported_ = input.readMessage(org.apache.flink.com.google.protobuf.Any.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(imported_);
                imported_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (org.apache.flink.com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new org.apache.flink.com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final org.apache.flink.com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_flink_test_ImportedMessage_descriptor;
    }

    @Override
    protected org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_flink_test_ImportedMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage.class, org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage.Builder.class);
    }

    public static final int IMPORTED_FIELD_NUMBER = 2;
    private org.apache.flink.com.google.protobuf.Any imported_;
    /**
     * <code>.google.protobuf.Any imported = 2;</code>
     */
    public boolean hasImported() {
      return imported_ != null;
    }
    /**
     * <code>.google.protobuf.Any imported = 2;</code>
     */
    public org.apache.flink.com.google.protobuf.Any getImported() {
      return imported_ == null ? org.apache.flink.com.google.protobuf.Any.getDefaultInstance() : imported_;
    }
    /**
     * <code>.google.protobuf.Any imported = 2;</code>
     */
    public org.apache.flink.com.google.protobuf.AnyOrBuilder getImportedOrBuilder() {
      return getImported();
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(org.apache.flink.com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (imported_ != null) {
        output.writeMessage(2, getImported());
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (imported_ != null) {
        size += org.apache.flink.com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getImported());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage)) {
        return super.equals(obj);
      }
      org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage other = (org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage) obj;

      if (hasImported() != other.hasImported()) return false;
      if (hasImported()) {
        if (!getImported()
            .equals(other.getImported())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasImported()) {
        hash = (37 * hash) + IMPORTED_FIELD_NUMBER;
        hash = (53 * hash) + getImported().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage parseFrom(
        java.nio.ByteBuffer data)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage parseFrom(
        java.nio.ByteBuffer data,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage parseFrom(
        org.apache.flink.com.google.protobuf.ByteString data)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage parseFrom(
        org.apache.flink.com.google.protobuf.ByteString data,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage parseFrom(byte[] data)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage parseFrom(
        byte[] data,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage parseFrom(
        java.io.InputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage parseDelimitedFrom(
        java.io.InputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage parseFrom(
        org.apache.flink.com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage parseFrom(
        org.apache.flink.com.google.protobuf.CodedInputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        org.apache.flink.com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.flink.test.ImportedMessage}
     */
    public static final class Builder extends
        org.apache.flink.com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.flink.test.ImportedMessage)
        org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessageOrBuilder {
      public static final org.apache.flink.com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_flink_test_ImportedMessage_descriptor;
      }

      @Override
      protected org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_flink_test_ImportedMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage.class, org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage.Builder.class);
      }

      // Construct using org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          org.apache.flink.com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (org.apache.flink.com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (importedBuilder_ == null) {
          imported_ = null;
        } else {
          imported_ = null;
          importedBuilder_ = null;
        }
        return this;
      }

      @Override
      public org.apache.flink.com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_flink_test_ImportedMessage_descriptor;
      }

      @Override
      public org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @Override
      public org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage build() {
        org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage buildPartial() {
        org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage result = new org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage(this);
        if (importedBuilder_ == null) {
          result.imported_ = imported_;
        } else {
          result.imported_ = importedBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          org.apache.flink.com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(org.apache.flink.com.google.protobuf.Message other) {
        if (other instanceof org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage) {
          return mergeFrom((org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage other) {
        if (other == getDefaultInstance()) return this;
        if (other.hasImported()) {
          mergeImported(other.getImported());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          org.apache.flink.com.google.protobuf.CodedInputStream input,
          org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (org.apache.flink.com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.apache.flink.com.google.protobuf.Any imported_;
      private org.apache.flink.com.google.protobuf.SingleFieldBuilderV3<
          org.apache.flink.com.google.protobuf.Any, org.apache.flink.com.google.protobuf.Any.Builder, org.apache.flink.com.google.protobuf.AnyOrBuilder> importedBuilder_;
      /**
       * <code>.google.protobuf.Any imported = 2;</code>
       */
      public boolean hasImported() {
        return importedBuilder_ != null || imported_ != null;
      }
      /**
       * <code>.google.protobuf.Any imported = 2;</code>
       */
      public org.apache.flink.com.google.protobuf.Any getImported() {
        if (importedBuilder_ == null) {
          return imported_ == null ? org.apache.flink.com.google.protobuf.Any.getDefaultInstance() : imported_;
        } else {
          return importedBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Any imported = 2;</code>
       */
      public Builder setImported(org.apache.flink.com.google.protobuf.Any value) {
        if (importedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          imported_ = value;
          onChanged();
        } else {
          importedBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Any imported = 2;</code>
       */
      public Builder setImported(
          org.apache.flink.com.google.protobuf.Any.Builder builderForValue) {
        if (importedBuilder_ == null) {
          imported_ = builderForValue.build();
          onChanged();
        } else {
          importedBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Any imported = 2;</code>
       */
      public Builder mergeImported(org.apache.flink.com.google.protobuf.Any value) {
        if (importedBuilder_ == null) {
          if (imported_ != null) {
            imported_ =
              org.apache.flink.com.google.protobuf.Any.newBuilder(imported_).mergeFrom(value).buildPartial();
          } else {
            imported_ = value;
          }
          onChanged();
        } else {
          importedBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Any imported = 2;</code>
       */
      public Builder clearImported() {
        if (importedBuilder_ == null) {
          imported_ = null;
          onChanged();
        } else {
          imported_ = null;
          importedBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Any imported = 2;</code>
       */
      public org.apache.flink.com.google.protobuf.Any.Builder getImportedBuilder() {
        
        onChanged();
        return getImportedFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Any imported = 2;</code>
       */
      public org.apache.flink.com.google.protobuf.AnyOrBuilder getImportedOrBuilder() {
        if (importedBuilder_ != null) {
          return importedBuilder_.getMessageOrBuilder();
        } else {
          return imported_ == null ?
              org.apache.flink.com.google.protobuf.Any.getDefaultInstance() : imported_;
        }
      }
      /**
       * <code>.google.protobuf.Any imported = 2;</code>
       */
      private org.apache.flink.com.google.protobuf.SingleFieldBuilderV3<
          org.apache.flink.com.google.protobuf.Any, org.apache.flink.com.google.protobuf.Any.Builder, org.apache.flink.com.google.protobuf.AnyOrBuilder> 
          getImportedFieldBuilder() {
        if (importedBuilder_ == null) {
          importedBuilder_ = new org.apache.flink.com.google.protobuf.SingleFieldBuilderV3<
              org.apache.flink.com.google.protobuf.Any, org.apache.flink.com.google.protobuf.Any.Builder, org.apache.flink.com.google.protobuf.AnyOrBuilder>(
                  getImported(),
                  getParentForChildren(),
                  isClean());
          imported_ = null;
        }
        return importedBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final org.apache.flink.com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final org.apache.flink.com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.flink.test.ImportedMessage)
    }

    // @@protoc_insertion_point(class_scope:org.apache.flink.test.ImportedMessage)
    private static final org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage();
    }

    public static org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final org.apache.flink.com.google.protobuf.Parser<ImportedMessage>
        PARSER = new org.apache.flink.com.google.protobuf.AbstractParser<ImportedMessage>() {
      @java.lang.Override
      public ImportedMessage parsePartialFrom(
          org.apache.flink.com.google.protobuf.CodedInputStream input,
          org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
        return new ImportedMessage(input, extensionRegistry);
      }
    };

    public static org.apache.flink.com.google.protobuf.Parser<ImportedMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.flink.com.google.protobuf.Parser<ImportedMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.flink.common.protobuf.generated.TestProtos.ImportedMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OneOfMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.flink.test.OneOfMessage)
      org.apache.flink.com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string foo = 1;</code>
     */
    java.lang.String getFoo();
    /**
     * <code>string foo = 1;</code>
     */
    org.apache.flink.com.google.protobuf.ByteString
        getFooBytes();

    /**
     * <code>int64 bar = 2;</code>
     */
    long getBar();

    /**
     * <code>float baz = 3;</code>
     */
    float getBaz();

    public org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage.PayloadCase getPayloadCase();
  }
  /**
   * Protobuf type {@code org.apache.flink.test.OneOfMessage}
   */
  public  static final class OneOfMessage extends
      org.apache.flink.com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.flink.test.OneOfMessage)
      OneOfMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OneOfMessage.newBuilder() to construct.
    private OneOfMessage(org.apache.flink.com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OneOfMessage() {
    }

    @java.lang.Override
    public final org.apache.flink.com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OneOfMessage(
        org.apache.flink.com.google.protobuf.CodedInputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      org.apache.flink.com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          org.apache.flink.com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              payloadCase_ = 1;
              payload_ = s;
              break;
            }
            case 16: {
              payloadCase_ = 2;
              payload_ = input.readInt64();
              break;
            }
            case 29: {
              payloadCase_ = 3;
              payload_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (org.apache.flink.com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new org.apache.flink.com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final org.apache.flink.com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_org_apache_flink_test_OneOfMessage_descriptor;
    }

    @java.lang.Override
    protected org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_org_apache_flink_test_OneOfMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage.class, org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage.Builder.class);
    }

    private int payloadCase_ = 0;
    private java.lang.Object payload_;
    public enum PayloadCase
        implements org.apache.flink.com.google.protobuf.Internal.EnumLite {
      FOO(1),
      BAR(2),
      BAZ(3),
      PAYLOAD_NOT_SET(0);
      private final int value;
      private PayloadCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PayloadCase valueOf(int value) {
        return forNumber(value);
      }

      public static PayloadCase forNumber(int value) {
        switch (value) {
          case 1: return FOO;
          case 2: return BAR;
          case 3: return BAZ;
          case 0: return PAYLOAD_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public PayloadCase
    getPayloadCase() {
      return PayloadCase.forNumber(
          payloadCase_);
    }

    public static final int FOO_FIELD_NUMBER = 1;
    /**
     * <code>string foo = 1;</code>
     */
    public java.lang.String getFoo() {
      java.lang.Object ref = "";
      if (payloadCase_ == 1) {
        ref = payload_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        org.apache.flink.com.google.protobuf.ByteString bs = 
            (org.apache.flink.com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (payloadCase_ == 1) {
          payload_ = s;
        }
        return s;
      }
    }
    /**
     * <code>string foo = 1;</code>
     */
    public org.apache.flink.com.google.protobuf.ByteString
        getFooBytes() {
      java.lang.Object ref = "";
      if (payloadCase_ == 1) {
        ref = payload_;
      }
      if (ref instanceof java.lang.String) {
        org.apache.flink.com.google.protobuf.ByteString b = 
            org.apache.flink.com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (payloadCase_ == 1) {
          payload_ = b;
        }
        return b;
      } else {
        return (org.apache.flink.com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BAR_FIELD_NUMBER = 2;
    /**
     * <code>int64 bar = 2;</code>
     */
    public long getBar() {
      if (payloadCase_ == 2) {
        return (java.lang.Long) payload_;
      }
      return 0L;
    }

    public static final int BAZ_FIELD_NUMBER = 3;
    /**
     * <code>float baz = 3;</code>
     */
    public float getBaz() {
      if (payloadCase_ == 3) {
        return (java.lang.Float) payload_;
      }
      return 0F;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(org.apache.flink.com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (payloadCase_ == 1) {
        org.apache.flink.com.google.protobuf.GeneratedMessageV3.writeString(output, 1, payload_);
      }
      if (payloadCase_ == 2) {
        output.writeInt64(
            2, (long)((java.lang.Long) payload_));
      }
      if (payloadCase_ == 3) {
        output.writeFloat(
            3, (float)((java.lang.Float) payload_));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (payloadCase_ == 1) {
        size += org.apache.flink.com.google.protobuf.GeneratedMessageV3.computeStringSize(1, payload_);
      }
      if (payloadCase_ == 2) {
        size += org.apache.flink.com.google.protobuf.CodedOutputStream
          .computeInt64Size(
              2, (long)((java.lang.Long) payload_));
      }
      if (payloadCase_ == 3) {
        size += org.apache.flink.com.google.protobuf.CodedOutputStream
          .computeFloatSize(
              3, (float)((java.lang.Float) payload_));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage)) {
        return super.equals(obj);
      }
      org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage other = (org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage) obj;

      if (!getPayloadCase().equals(other.getPayloadCase())) return false;
      switch (payloadCase_) {
        case 1:
          if (!getFoo()
              .equals(other.getFoo())) return false;
          break;
        case 2:
          if (getBar()
              != other.getBar()) return false;
          break;
        case 3:
          if (java.lang.Float.floatToIntBits(getBaz())
              != java.lang.Float.floatToIntBits(
                  other.getBaz())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (payloadCase_) {
        case 1:
          hash = (37 * hash) + FOO_FIELD_NUMBER;
          hash = (53 * hash) + getFoo().hashCode();
          break;
        case 2:
          hash = (37 * hash) + BAR_FIELD_NUMBER;
          hash = (53 * hash) + org.apache.flink.com.google.protobuf.Internal.hashLong(
              getBar());
          break;
        case 3:
          hash = (37 * hash) + BAZ_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getBaz());
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage parseFrom(
        java.nio.ByteBuffer data)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage parseFrom(
        java.nio.ByteBuffer data,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage parseFrom(
        org.apache.flink.com.google.protobuf.ByteString data)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage parseFrom(
        org.apache.flink.com.google.protobuf.ByteString data,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage parseFrom(byte[] data)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage parseFrom(
        byte[] data,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage parseFrom(
        java.io.InputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage parseDelimitedFrom(
        java.io.InputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage parseFrom(
        org.apache.flink.com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage parseFrom(
        org.apache.flink.com.google.protobuf.CodedInputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.apache.flink.com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        org.apache.flink.com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.flink.test.OneOfMessage}
     */
    public static final class Builder extends
        org.apache.flink.com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.flink.test.OneOfMessage)
        org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessageOrBuilder {
      public static final org.apache.flink.com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_org_apache_flink_test_OneOfMessage_descriptor;
      }

      @java.lang.Override
      protected org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_org_apache_flink_test_OneOfMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage.class, org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage.Builder.class);
      }

      // Construct using org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          org.apache.flink.com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (org.apache.flink.com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        payloadCase_ = 0;
        payload_ = null;
        return this;
      }

      @java.lang.Override
      public org.apache.flink.com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_org_apache_flink_test_OneOfMessage_descriptor;
      }

      @java.lang.Override
      public org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage build() {
        org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage buildPartial() {
        org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage result = new org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage(this);
        if (payloadCase_ == 1) {
          result.payload_ = payload_;
        }
        if (payloadCase_ == 2) {
          result.payload_ = payload_;
        }
        if (payloadCase_ == 3) {
          result.payload_ = payload_;
        }
        result.payloadCase_ = payloadCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          org.apache.flink.com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(org.apache.flink.com.google.protobuf.Message other) {
        if (other instanceof org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage) {
          return mergeFrom((org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage other) {
        if (other == getDefaultInstance()) return this;
        switch (other.getPayloadCase()) {
          case FOO: {
            payloadCase_ = 1;
            payload_ = other.payload_;
            onChanged();
            break;
          }
          case BAR: {
            setBar(other.getBar());
            break;
          }
          case BAZ: {
            setBaz(other.getBaz());
            break;
          }
          case PAYLOAD_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          org.apache.flink.com.google.protobuf.CodedInputStream input,
          org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (org.apache.flink.com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int payloadCase_ = 0;
      private java.lang.Object payload_;
      public PayloadCase
          getPayloadCase() {
        return PayloadCase.forNumber(
            payloadCase_);
      }

      public Builder clearPayload() {
        payloadCase_ = 0;
        payload_ = null;
        onChanged();
        return this;
      }


      /**
       * <code>string foo = 1;</code>
       */
      public java.lang.String getFoo() {
        java.lang.Object ref = "";
        if (payloadCase_ == 1) {
          ref = payload_;
        }
        if (!(ref instanceof java.lang.String)) {
          org.apache.flink.com.google.protobuf.ByteString bs =
              (org.apache.flink.com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (payloadCase_ == 1) {
            payload_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string foo = 1;</code>
       */
      public org.apache.flink.com.google.protobuf.ByteString
          getFooBytes() {
        java.lang.Object ref = "";
        if (payloadCase_ == 1) {
          ref = payload_;
        }
        if (ref instanceof String) {
          org.apache.flink.com.google.protobuf.ByteString b = 
              org.apache.flink.com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (payloadCase_ == 1) {
            payload_ = b;
          }
          return b;
        } else {
          return (org.apache.flink.com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string foo = 1;</code>
       */
      public Builder setFoo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  payloadCase_ = 1;
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string foo = 1;</code>
       */
      public Builder clearFoo() {
        if (payloadCase_ == 1) {
          payloadCase_ = 0;
          payload_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <code>string foo = 1;</code>
       */
      public Builder setFooBytes(
          org.apache.flink.com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        payloadCase_ = 1;
        payload_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>int64 bar = 2;</code>
       */
      public long getBar() {
        if (payloadCase_ == 2) {
          return (java.lang.Long) payload_;
        }
        return 0L;
      }
      /**
       * <code>int64 bar = 2;</code>
       */
      public Builder setBar(long value) {
        payloadCase_ = 2;
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 bar = 2;</code>
       */
      public Builder clearBar() {
        if (payloadCase_ == 2) {
          payloadCase_ = 0;
          payload_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>float baz = 3;</code>
       */
      public float getBaz() {
        if (payloadCase_ == 3) {
          return (java.lang.Float) payload_;
        }
        return 0F;
      }
      /**
       * <code>float baz = 3;</code>
       */
      public Builder setBaz(float value) {
        payloadCase_ = 3;
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float baz = 3;</code>
       */
      public Builder clearBaz() {
        if (payloadCase_ == 3) {
          payloadCase_ = 0;
          payload_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final org.apache.flink.com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final org.apache.flink.com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.flink.test.OneOfMessage)
    }

    // @@protoc_insertion_point(class_scope:org.apache.flink.test.OneOfMessage)
    private static final org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage();
    }

    public static org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final org.apache.flink.com.google.protobuf.Parser<OneOfMessage>
        PARSER = new org.apache.flink.com.google.protobuf.AbstractParser<OneOfMessage>() {
      @java.lang.Override
      public OneOfMessage parsePartialFrom(
          org.apache.flink.com.google.protobuf.CodedInputStream input,
          org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
        return new OneOfMessage(input, extensionRegistry);
      }
    };

    public static org.apache.flink.com.google.protobuf.Parser<OneOfMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.flink.com.google.protobuf.Parser<OneOfMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.flink.common.protobuf.generated.TestProtos.OneOfMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final org.apache.flink.com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_flink_test_SimpleMessage_descriptor;
  private static final 
    org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_flink_test_SimpleMessage_fieldAccessorTable;
  private static final org.apache.flink.com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_flink_test_RepeatedMessage_descriptor;
  private static final 
    org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_flink_test_RepeatedMessage_fieldAccessorTable;
  private static final org.apache.flink.com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_flink_test_NestedMessage_descriptor;
  private static final 
    org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_flink_test_NestedMessage_fieldAccessorTable;
  private static final org.apache.flink.com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_flink_test_NestedMessage_Foo_descriptor;
  private static final 
    org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_flink_test_NestedMessage_Foo_fieldAccessorTable;
  private static final org.apache.flink.com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_flink_test_MessageWithEnum_descriptor;
  private static final 
    org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_flink_test_MessageWithEnum_fieldAccessorTable;
  private static final org.apache.flink.com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_flink_test_ImportedMessage_descriptor;
  private static final 
    org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_flink_test_ImportedMessage_fieldAccessorTable;
  private static final org.apache.flink.com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_flink_test_OneOfMessage_descriptor;
  private static final 
    org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_flink_test_OneOfMessage_fieldAccessorTable;

  public static org.apache.flink.com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  org.apache.flink.com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\ntest.proto\022\025org.apache.flink.test\032\031goo" +
      "gle/protobuf/any.proto\"\035\n\rSimpleMessage\022" +
      "\014\n\004name\030\001 \001(\t\"O\n\017RepeatedMessage\022<\n\016simp" +
      "le_message\030\002 \003(\0132$.org.apache.flink.test" +
      ".SimpleMessage\"[\n\rNestedMessage\0225\n\003foo\030\001" +
      " \001(\0132(.org.apache.flink.test.NestedMessa" +
      "ge.Foo\032\023\n\003Foo\022\014\n\004name\030\001 \001(\t\"@\n\017MessageWi" +
      "thEnum\022-\n\006letter\030\001 \001(\0162\035.org.apache.flin" +
      "k.test.Letter\"9\n\017ImportedMessage\022&\n\010impo" +
      "rted\030\002 \001(\0132\024.google.protobuf.Any\"F\n\014OneO" +
      "fMessage\022\r\n\003foo\030\001 \001(\tH\000\022\r\n\003bar\030\002 \001(\003H\000\022\r" +
      "\n\003baz\030\003 \001(\002H\000B\t\n\007payload*\035\n\006Letter\022\005\n\001A\020" +
      "\000\022\005\n\001B\020\001\022\005\n\001C\020\002BI\n9org.apache.flink.stat" +
      "efun.flink.common.protobuf.generatedB\nTe" +
      "stProtosP\000b\006proto3"
    };
    org.apache.flink.com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new org.apache.flink.com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public org.apache.flink.com.google.protobuf.ExtensionRegistry assignDescriptors(
              org.apache.flink.com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    org.apache.flink.com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new org.apache.flink.com.google.protobuf.Descriptors.FileDescriptor[] {
          org.apache.flink.com.google.protobuf.AnyProto.getDescriptor(),
        }, assigner);
    internal_static_org_apache_flink_test_SimpleMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_apache_flink_test_SimpleMessage_fieldAccessorTable = new
      org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_flink_test_SimpleMessage_descriptor,
        new java.lang.String[] { "Name", });
    internal_static_org_apache_flink_test_RepeatedMessage_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_org_apache_flink_test_RepeatedMessage_fieldAccessorTable = new
      org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_flink_test_RepeatedMessage_descriptor,
        new java.lang.String[] { "SimpleMessage", });
    internal_static_org_apache_flink_test_NestedMessage_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_org_apache_flink_test_NestedMessage_fieldAccessorTable = new
      org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_flink_test_NestedMessage_descriptor,
        new java.lang.String[] { "Foo", });
    internal_static_org_apache_flink_test_NestedMessage_Foo_descriptor =
      internal_static_org_apache_flink_test_NestedMessage_descriptor.getNestedTypes().get(0);
    internal_static_org_apache_flink_test_NestedMessage_Foo_fieldAccessorTable = new
      org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_flink_test_NestedMessage_Foo_descriptor,
        new java.lang.String[] { "Name", });
    internal_static_org_apache_flink_test_MessageWithEnum_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_org_apache_flink_test_MessageWithEnum_fieldAccessorTable = new
      org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_flink_test_MessageWithEnum_descriptor,
        new java.lang.String[] { "Letter", });
    internal_static_org_apache_flink_test_ImportedMessage_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_org_apache_flink_test_ImportedMessage_fieldAccessorTable = new
      org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_flink_test_ImportedMessage_descriptor,
        new java.lang.String[] { "Imported", });
    internal_static_org_apache_flink_test_OneOfMessage_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_org_apache_flink_test_OneOfMessage_fieldAccessorTable = new
      org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_flink_test_OneOfMessage_descriptor,
        new java.lang.String[] { "Foo", "Bar", "Baz", "Payload", });
    org.apache.flink.com.google.protobuf.AnyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
