// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: serializer.proto

package org.apache.flink.common.generated;

public final class Serializer {
  private Serializer() {}
  public static void registerAllExtensions(
      org.apache.flink.com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      org.apache.flink.com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (org.apache.flink.com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final org.apache.flink.com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_flink_statefun_flink_common_ProtobufSerializerSnapshot_descriptor;
  static final 
    org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_flink_statefun_flink_common_ProtobufSerializerSnapshot_fieldAccessorTable;

  public static org.apache.flink.com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  org.apache.flink.com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\020serializer.proto\022&org.apache.flink.sta" +
      "tefun.flink.common\032 google/protobuf/desc" +
      "riptor.proto\"\213\001\n\032ProtobufSerializerSnaps" +
      "hot\022\033\n\023generated_java_name\030\001 \001(\t\022\024\n\014mess" +
      "age_name\030\002 \001(\t\022:\n\016descriptor_set\030\003 \001(\0132\"" +
      ".google.protobuf.FileDescriptorSetB4\n0or" +
      "g.apache.flink.statefun.flink.common.gen" +
      "eratedP\001b\006proto3"
    };
    org.apache.flink.com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new org.apache.flink.com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public org.apache.flink.com.google.protobuf.ExtensionRegistry assignDescriptors(
              org.apache.flink.com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    org.apache.flink.com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new org.apache.flink.com.google.protobuf.Descriptors.FileDescriptor[] {
          org.apache.flink.com.google.protobuf.DescriptorProtos.getDescriptor(),
        }, assigner);
    internal_static_org_apache_flink_statefun_flink_common_ProtobufSerializerSnapshot_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_apache_flink_statefun_flink_common_ProtobufSerializerSnapshot_fieldAccessorTable = new
      org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_flink_statefun_flink_common_ProtobufSerializerSnapshot_descriptor,
        new String[] { "GeneratedJavaName", "MessageName", "DescriptorSet", });
    org.apache.flink.com.google.protobuf.DescriptorProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
