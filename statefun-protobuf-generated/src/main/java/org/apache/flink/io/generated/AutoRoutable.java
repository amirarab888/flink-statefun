// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: routable.proto

package org.apache.flink.io.generated;

/**
 * Protobuf type {@code org.apache.flink.statefun.flink.io.AutoRoutable}
 */
public  final class AutoRoutable extends
    org.apache.flink.com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:org.apache.flink.statefun.flink.io.AutoRoutable)
    AutoRoutableOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AutoRoutable.newBuilder() to construct.
  private AutoRoutable(org.apache.flink.com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AutoRoutable() {
    id_ = "";
    payloadBytes_ = org.apache.flink.com.google.protobuf.ByteString.EMPTY;
  }

  @Override
  public final org.apache.flink.com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AutoRoutable(
      org.apache.flink.com.google.protobuf.CodedInputStream input,
      org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    int mutable_bitField0_ = 0;
    org.apache.flink.com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        org.apache.flink.com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            org.apache.flink.io.generated.RoutingConfig.Builder subBuilder = null;
            if (config_ != null) {
              subBuilder = config_.toBuilder();
            }
            config_ = input.readMessage(org.apache.flink.io.generated.RoutingConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(config_);
              config_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            String s = input.readStringRequireUtf8();

            id_ = s;
            break;
          }
          case 26: {

            payloadBytes_ = input.readBytes();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (org.apache.flink.com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new org.apache.flink.com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final org.apache.flink.com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.apache.flink.io.generated.Routable.internal_static_org_apache_flink_statefun_flink_io_AutoRoutable_descriptor;
  }

  @Override
  protected org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.flink.io.generated.Routable.internal_static_org_apache_flink_statefun_flink_io_AutoRoutable_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.flink.io.generated.AutoRoutable.class, org.apache.flink.io.generated.AutoRoutable.Builder.class);
  }

  public static final int CONFIG_FIELD_NUMBER = 1;
  private org.apache.flink.io.generated.RoutingConfig config_;
  /**
   * <code>.org.apache.flink.statefun.flink.io.RoutingConfig config = 1;</code>
   */
  public boolean hasConfig() {
    return config_ != null;
  }
  /**
   * <code>.org.apache.flink.statefun.flink.io.RoutingConfig config = 1;</code>
   */
  public org.apache.flink.io.generated.RoutingConfig getConfig() {
    return config_ == null ? org.apache.flink.io.generated.RoutingConfig.getDefaultInstance() : config_;
  }
  /**
   * <code>.org.apache.flink.statefun.flink.io.RoutingConfig config = 1;</code>
   */
  public org.apache.flink.io.generated.RoutingConfigOrBuilder getConfigOrBuilder() {
    return getConfig();
  }

  public static final int ID_FIELD_NUMBER = 2;
  private volatile Object id_;
  /**
   * <code>string id = 2;</code>
   */
  public String getId() {
    Object ref = id_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      org.apache.flink.com.google.protobuf.ByteString bs = 
          (org.apache.flink.com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <code>string id = 2;</code>
   */
  public org.apache.flink.com.google.protobuf.ByteString
      getIdBytes() {
    Object ref = id_;
    if (ref instanceof String) {
      org.apache.flink.com.google.protobuf.ByteString b = 
          org.apache.flink.com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      id_ = b;
      return b;
    } else {
      return (org.apache.flink.com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PAYLOAD_BYTES_FIELD_NUMBER = 3;
  private org.apache.flink.com.google.protobuf.ByteString payloadBytes_;
  /**
   * <code>bytes payload_bytes = 3;</code>
   */
  public org.apache.flink.com.google.protobuf.ByteString getPayloadBytes() {
    return payloadBytes_;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(org.apache.flink.com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (config_ != null) {
      output.writeMessage(1, getConfig());
    }
    if (!getIdBytes().isEmpty()) {
      org.apache.flink.com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
    }
    if (!payloadBytes_.isEmpty()) {
      output.writeBytes(3, payloadBytes_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (config_ != null) {
      size += org.apache.flink.com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getConfig());
    }
    if (!getIdBytes().isEmpty()) {
      size += org.apache.flink.com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
    }
    if (!payloadBytes_.isEmpty()) {
      size += org.apache.flink.com.google.protobuf.CodedOutputStream
        .computeBytesSize(3, payloadBytes_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.apache.flink.io.generated.AutoRoutable)) {
      return super.equals(obj);
    }
    org.apache.flink.io.generated.AutoRoutable other = (org.apache.flink.io.generated.AutoRoutable) obj;

    if (hasConfig() != other.hasConfig()) return false;
    if (hasConfig()) {
      if (!getConfig()
          .equals(other.getConfig())) return false;
    }
    if (!getId()
        .equals(other.getId())) return false;
    if (!getPayloadBytes()
        .equals(other.getPayloadBytes())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasConfig()) {
      hash = (37 * hash) + CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getConfig().hashCode();
    }
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    hash = (37 * hash) + PAYLOAD_BYTES_FIELD_NUMBER;
    hash = (53 * hash) + getPayloadBytes().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.flink.io.generated.AutoRoutable parseFrom(
      java.nio.ByteBuffer data)
      throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.flink.io.generated.AutoRoutable parseFrom(
      java.nio.ByteBuffer data,
      org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.flink.io.generated.AutoRoutable parseFrom(
      org.apache.flink.com.google.protobuf.ByteString data)
      throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.flink.io.generated.AutoRoutable parseFrom(
      org.apache.flink.com.google.protobuf.ByteString data,
      org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.flink.io.generated.AutoRoutable parseFrom(byte[] data)
      throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.flink.io.generated.AutoRoutable parseFrom(
      byte[] data,
      org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.flink.io.generated.AutoRoutable parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return org.apache.flink.com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.flink.io.generated.AutoRoutable parseFrom(
      java.io.InputStream input,
      org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.apache.flink.com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.flink.io.generated.AutoRoutable parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return org.apache.flink.com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.apache.flink.io.generated.AutoRoutable parseDelimitedFrom(
      java.io.InputStream input,
      org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.apache.flink.com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.flink.io.generated.AutoRoutable parseFrom(
      org.apache.flink.com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return org.apache.flink.com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.flink.io.generated.AutoRoutable parseFrom(
      org.apache.flink.com.google.protobuf.CodedInputStream input,
      org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.apache.flink.com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.apache.flink.io.generated.AutoRoutable prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      org.apache.flink.com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code org.apache.flink.statefun.flink.io.AutoRoutable}
   */
  public static final class Builder extends
      org.apache.flink.com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:org.apache.flink.statefun.flink.io.AutoRoutable)
      org.apache.flink.io.generated.AutoRoutableOrBuilder {
    public static final org.apache.flink.com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.flink.io.generated.Routable.internal_static_org_apache_flink_statefun_flink_io_AutoRoutable_descriptor;
    }

    @Override
    protected org.apache.flink.com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.flink.io.generated.Routable.internal_static_org_apache_flink_statefun_flink_io_AutoRoutable_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.flink.io.generated.AutoRoutable.class, org.apache.flink.io.generated.AutoRoutable.Builder.class);
    }

    // Construct using org.apache.flink.io.generated.AutoRoutable.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        org.apache.flink.com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (org.apache.flink.com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      if (configBuilder_ == null) {
        config_ = null;
      } else {
        config_ = null;
        configBuilder_ = null;
      }
      id_ = "";

      payloadBytes_ = org.apache.flink.com.google.protobuf.ByteString.EMPTY;

      return this;
    }

    @Override
    public org.apache.flink.com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.apache.flink.io.generated.Routable.internal_static_org_apache_flink_statefun_flink_io_AutoRoutable_descriptor;
    }

    @Override
    public org.apache.flink.io.generated.AutoRoutable getDefaultInstanceForType() {
      return org.apache.flink.io.generated.AutoRoutable.getDefaultInstance();
    }

    @Override
    public org.apache.flink.io.generated.AutoRoutable build() {
      org.apache.flink.io.generated.AutoRoutable result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public org.apache.flink.io.generated.AutoRoutable buildPartial() {
      org.apache.flink.io.generated.AutoRoutable result = new org.apache.flink.io.generated.AutoRoutable(this);
      if (configBuilder_ == null) {
        result.config_ = config_;
      } else {
        result.config_ = configBuilder_.build();
      }
      result.id_ = id_;
      result.payloadBytes_ = payloadBytes_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        org.apache.flink.com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        org.apache.flink.com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(org.apache.flink.com.google.protobuf.Message other) {
      if (other instanceof org.apache.flink.io.generated.AutoRoutable) {
        return mergeFrom((org.apache.flink.io.generated.AutoRoutable)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.apache.flink.io.generated.AutoRoutable other) {
      if (other == org.apache.flink.io.generated.AutoRoutable.getDefaultInstance()) return this;
      if (other.hasConfig()) {
        mergeConfig(other.getConfig());
      }
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        onChanged();
      }
      if (other.getPayloadBytes() != org.apache.flink.com.google.protobuf.ByteString.EMPTY) {
        setPayloadBytes(other.getPayloadBytes());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        org.apache.flink.com.google.protobuf.CodedInputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.apache.flink.io.generated.AutoRoutable parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (org.apache.flink.com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.apache.flink.io.generated.AutoRoutable) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private org.apache.flink.io.generated.RoutingConfig config_;
    private org.apache.flink.com.google.protobuf.SingleFieldBuilderV3<
        org.apache.flink.io.generated.RoutingConfig, org.apache.flink.io.generated.RoutingConfig.Builder, org.apache.flink.io.generated.RoutingConfigOrBuilder> configBuilder_;
    /**
     * <code>.org.apache.flink.statefun.flink.io.RoutingConfig config = 1;</code>
     */
    public boolean hasConfig() {
      return configBuilder_ != null || config_ != null;
    }
    /**
     * <code>.org.apache.flink.statefun.flink.io.RoutingConfig config = 1;</code>
     */
    public org.apache.flink.io.generated.RoutingConfig getConfig() {
      if (configBuilder_ == null) {
        return config_ == null ? org.apache.flink.io.generated.RoutingConfig.getDefaultInstance() : config_;
      } else {
        return configBuilder_.getMessage();
      }
    }
    /**
     * <code>.org.apache.flink.statefun.flink.io.RoutingConfig config = 1;</code>
     */
    public Builder setConfig(org.apache.flink.io.generated.RoutingConfig value) {
      if (configBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        config_ = value;
        onChanged();
      } else {
        configBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.org.apache.flink.statefun.flink.io.RoutingConfig config = 1;</code>
     */
    public Builder setConfig(
        org.apache.flink.io.generated.RoutingConfig.Builder builderForValue) {
      if (configBuilder_ == null) {
        config_ = builderForValue.build();
        onChanged();
      } else {
        configBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.org.apache.flink.statefun.flink.io.RoutingConfig config = 1;</code>
     */
    public Builder mergeConfig(org.apache.flink.io.generated.RoutingConfig value) {
      if (configBuilder_ == null) {
        if (config_ != null) {
          config_ =
            org.apache.flink.io.generated.RoutingConfig.newBuilder(config_).mergeFrom(value).buildPartial();
        } else {
          config_ = value;
        }
        onChanged();
      } else {
        configBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.org.apache.flink.statefun.flink.io.RoutingConfig config = 1;</code>
     */
    public Builder clearConfig() {
      if (configBuilder_ == null) {
        config_ = null;
        onChanged();
      } else {
        config_ = null;
        configBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.org.apache.flink.statefun.flink.io.RoutingConfig config = 1;</code>
     */
    public org.apache.flink.io.generated.RoutingConfig.Builder getConfigBuilder() {
      
      onChanged();
      return getConfigFieldBuilder().getBuilder();
    }
    /**
     * <code>.org.apache.flink.statefun.flink.io.RoutingConfig config = 1;</code>
     */
    public org.apache.flink.io.generated.RoutingConfigOrBuilder getConfigOrBuilder() {
      if (configBuilder_ != null) {
        return configBuilder_.getMessageOrBuilder();
      } else {
        return config_ == null ?
            org.apache.flink.io.generated.RoutingConfig.getDefaultInstance() : config_;
      }
    }
    /**
     * <code>.org.apache.flink.statefun.flink.io.RoutingConfig config = 1;</code>
     */
    private org.apache.flink.com.google.protobuf.SingleFieldBuilderV3<
        org.apache.flink.io.generated.RoutingConfig, org.apache.flink.io.generated.RoutingConfig.Builder, org.apache.flink.io.generated.RoutingConfigOrBuilder> 
        getConfigFieldBuilder() {
      if (configBuilder_ == null) {
        configBuilder_ = new org.apache.flink.com.google.protobuf.SingleFieldBuilderV3<
            org.apache.flink.io.generated.RoutingConfig, org.apache.flink.io.generated.RoutingConfig.Builder, org.apache.flink.io.generated.RoutingConfigOrBuilder>(
                getConfig(),
                getParentForChildren(),
                isClean());
        config_ = null;
      }
      return configBuilder_;
    }

    private Object id_ = "";
    /**
     * <code>string id = 2;</code>
     */
    public String getId() {
      Object ref = id_;
      if (!(ref instanceof String)) {
        org.apache.flink.com.google.protobuf.ByteString bs =
            (org.apache.flink.com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string id = 2;</code>
     */
    public org.apache.flink.com.google.protobuf.ByteString
        getIdBytes() {
      Object ref = id_;
      if (ref instanceof String) {
        org.apache.flink.com.google.protobuf.ByteString b = 
            org.apache.flink.com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        id_ = b;
        return b;
      } else {
        return (org.apache.flink.com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string id = 2;</code>
     */
    public Builder setId(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string id = 2;</code>
     */
    public Builder clearId() {
      
      id_ = getDefaultInstance().getId();
      onChanged();
      return this;
    }
    /**
     * <code>string id = 2;</code>
     */
    public Builder setIdBytes(
        org.apache.flink.com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      id_ = value;
      onChanged();
      return this;
    }

    private org.apache.flink.com.google.protobuf.ByteString payloadBytes_ = org.apache.flink.com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes payload_bytes = 3;</code>
     */
    public org.apache.flink.com.google.protobuf.ByteString getPayloadBytes() {
      return payloadBytes_;
    }
    /**
     * <code>bytes payload_bytes = 3;</code>
     */
    public Builder setPayloadBytes(org.apache.flink.com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      payloadBytes_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bytes payload_bytes = 3;</code>
     */
    public Builder clearPayloadBytes() {
      
      payloadBytes_ = getDefaultInstance().getPayloadBytes();
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final org.apache.flink.com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final org.apache.flink.com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:org.apache.flink.statefun.flink.io.AutoRoutable)
  }

  // @@protoc_insertion_point(class_scope:org.apache.flink.statefun.flink.io.AutoRoutable)
  private static final org.apache.flink.io.generated.AutoRoutable DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.apache.flink.io.generated.AutoRoutable();
  }

  public static org.apache.flink.io.generated.AutoRoutable getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final org.apache.flink.com.google.protobuf.Parser<AutoRoutable>
      PARSER = new org.apache.flink.com.google.protobuf.AbstractParser<AutoRoutable>() {
    @Override
    public AutoRoutable parsePartialFrom(
        org.apache.flink.com.google.protobuf.CodedInputStream input,
        org.apache.flink.com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.apache.flink.com.google.protobuf.InvalidProtocolBufferException {
      return new AutoRoutable(input, extensionRegistry);
    }
  };

  public static org.apache.flink.com.google.protobuf.Parser<AutoRoutable> parser() {
    return PARSER;
  }

  @Override
  public org.apache.flink.com.google.protobuf.Parser<AutoRoutable> getParserForType() {
    return PARSER;
  }

  @Override
  public org.apache.flink.io.generated.AutoRoutable getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

